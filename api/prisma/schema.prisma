// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Trip {
  id Int @default(autoincrement()) @id
  shipId Int @map("ship_id")
  ship Ship @relation(fields: [shipId], references: [id])
  shippingLineId Int @map("shipping_line_id")
  shippingLine ShippingLine @relation(fields: [shippingLineId], references: [id])
  srcPortId Int @map("src_port_id")
  srcPort Port @relation("srcPort", fields: [srcPortId], references: [id])
  destPortId Int @map("dest_port_id")
  destPort Port @relation("destPort", fields: [destPortId], references: [id])
  rateTableId Int @map("rate_table_id")
  rateTable RateTable @relation(fields: [rateTableId], references: [id])
  voyage Voyage?

  status String
  departureDate DateTime @map("departure_date")
  referenceNo String @map("reference_number")
  seatSelection Boolean @map("seat_selection") @default(false)
  availableVehicleCapacity Int @map("available_vehicle_capacity")
  vehicleCapacity Int @map("vehicle_capacity")
  bookingStartDate DateTime @map("booking_start_date")
  bookingCutOffDate DateTime @map("booking_cut_off_date")
  cancellationReason String? @map("cancellation_reason")

  bookingTrips BookingTrip[]
  bookingTripPassengers BookingTripPassenger[]
  bookingTripVehicles BookingTripVehicle[]
  notifications Notification[]
  availableCabins TripCabin[]
  disbursements Disbursement[]

  @@map("trip")
  @@unique([shipId, srcPortId, destPortId, departureDate])
}

model TripCabin {
  tripId Int @map("trip_id")
  trip Trip @relation(fields: [tripId], references: [id])
  cabinId Int @map("cabin_id")
  cabin Cabin @relation(fields: [cabinId], references: [id])
  seatPlanId Int? @map("seat_plan_id")
  seatPlan SeatPlan? @relation(fields: [seatPlanId], references: [id])

  availablePassengerCapacity Int @map("available_passenger_capacity")
  passengerCapacity Int @map("passenger_capacity")

  bookingTripPassengers BookingTripPassenger[]

  @@map("trip_cabin")
  @@id([tripId, cabinId])
}

model Ship {
  id Int @default(autoincrement()) @id
  shippingLineId Int @map("shipping_line_id")
  shippingLine ShippingLine @relation(fields: [shippingLineId], references: [id])

  name String
  recommendedVehicleCapacity Int @map("recommended_vehicle_capacity")

  cabins Cabin[]
  trips Trip[]
  schedules ShippingLineSchedule[]
  voyages Voyage[]
  dryDocks DryDock[]

  @@map("ship")
}

model Cabin {
  id Int @default(autoincrement()) @id
  shipId Int @map("ship_id")
  ship Ship @relation(fields: [shipId], references: [id])
  cabinTypeId Int @map("cabin_type_id")
  cabinType CabinType @relation(fields: [cabinTypeId], references: [id])
  defaultSeatPlanId Int? @map("default_seat_plan_id")
  defaultSeatPlan SeatPlan? @relation(fields: [defaultSeatPlanId], references: [id])

  name String
  recommendedPassengerCapacity Int @map("recommended_passenger_capacity")

  tripSpecificInfo TripCabin[]
  rateTableRows RateTableRow[]
  bookingTripPassengers BookingTripPassenger[] @relation("cabin")
  preferredByPassengers BookingTripPassenger[] @relation("preferredCabin")

  @@map("cabin")
}

model SeatPlan {
  id Int @default(autoincrement()) @id
  shippingLineId Int @map("shipping_line_id")
  shippingLine ShippingLine @relation(fields: [shippingLineId], references: [id])

  name String
  rowCount Int @map("row_count")
  columnCount Int @map("column_count")

  seats Seat[]
  trips TripCabin[]
  cabins Cabin[]

  @@map("seat_plan")
}

model Seat {
  id Int @default(autoincrement()) @id
  seatPlanId Int @map("seat_plan_id")
  seatPlan SeatPlan @relation(fields: [seatPlanId], references: [id])
  seatTypeId Int @map("seat_type_id")
  seatType SeatType @relation(fields: [seatTypeId], references: [id])

  name String
  row Int
  column Int

  bookingTripPassengers BookingTripPassenger[]

  @@map("seat")
}

model ShippingLine {
  id Int @default(autoincrement()) @id

  name String

  trips Trip[]
  ships Ship[]
  schedules ShippingLineSchedule[]
  cabinTypes CabinType[]
  seatTypes SeatType[]
  seatPlans SeatPlan[]
  accounts Account[]
  bookings Booking[]
  tempBookings TempBooking[]
  webhooks Webhook[]
  travelAgencies TravelAgencyShippingLine[]
  rateTables RateTable[]

  @@map("shipping_line")
}

model ShippingLineSchedule {
  id Int @default(autoincrement()) @id
  shippingLineId Int @map("shipping_line_id")
  shippingLine ShippingLine @relation(fields: [shippingLineId], references: [id])
  srcPortId Int @map("src_port_id")
  srcPort Port @relation("srcPort", fields: [srcPortId], references: [id])
  destPortId Int @map("dest_port_id")
  destPort Port @relation("destPort", fields: [destPortId], references: [id])
  shipId Int @map("ship_id")
  ship Ship @relation(fields: [shipId], references: [id])
  rateTableId Int @map("rate_table_id")
  rateTable RateTable @relation(fields: [rateTableId], references: [id])

  name String
  departureHour Int @map("departure_hour")
  departureMinute Int @map("departure_minute")
  daysBeforeBookingStart Int @map("days_before_booking_start")
  daysBeforeBookingCutOff Int @map("days_before_booking_cut_off")

  @@map("shipping_line_schedule")
}

model Port {
  id Int @default(autoincrement()) @id

  name String
  code String

  tripsSrc Trip[] @relation("srcPort")
  tripsDest Trip[] @relation("destPort")
  schedulesSrc ShippingLineSchedule[] @relation("srcPort")
  schedulesDest ShippingLineSchedule[] @relation("destPort")

  @@map("port")
}

model Passenger {
  id Int @default(autoincrement()) @id
  buddyId Int? @map("buddy_id")
  buddy Passenger? @relation("PassengerBuddies", fields: [buddyId], references: [id])
  account Account?

  firstName String @map("first_name")
  lastName String @map("last_name")
  occupation String
  sex String
  civilStatus String @map("civil_status")
  birthday DateTime
  address String
  nationality String
  discountType String? @map("discount_type")

  buddies Passenger[] @relation("PassengerBuddies")
  bookingTripPassengers BookingTripPassenger[]

  @@map("passenger")
}

model Vehicle {
  id Int @default(autoincrement()) @id
  accountId String? @map("account_id")
  account Account? @relation(fields: [accountId], references: [id])
  vehicleTypeId Int @map("vehicle_type_id")
  vehicleType VehicleType @relation(fields: [vehicleTypeId], references: [id])

  plateNo String @map("plate_number")
  modelName String @map("model_name")
  modelYear Int @map("model_year")
  officialReceiptUrl String @map("official_receipt_url")
  certificateOfRegistrationUrl String @map("certificate_of_registration_url")

  bookingTripVehicles BookingTripVehicle[]

  @@map("vehicle")
}

model Booking {
  id String @id
  createdByAccountId String? @map("created_by_account_id")
  createdByAccount Account? @relation("createdByAccount", fields: [createdByAccountId], references: [id])
  approvedByAccountId String? @map("approved_by_account_id")
  approvedByAccount Account? @relation("approvedByAccount", fields: [approvedByAccountId], references: [id])
  shippingLineId Int @map("shipping_line_id")
  shippingLine ShippingLine @relation(fields: [shippingLineId], references: [id])
  voucherCode String? @map("voucher_code")
  voucher Voucher? @relation(fields: [voucherCode], references: [code])

  referenceNo String @map("reference_no")
  bookingStatus String @map("booking_status")
  paymentStatus String @map("payment_status")
  totalPrice Float @map("total_price")
  priceWithoutMarkup Float @map("price_without_markup")
  bookingType String @map("booking_type")
  contactEmail String? @map("contact_email")
  contactMobile String? @map("contact_mobile")
  createdAt DateTime @map("created_at")
  isBookingRequest Boolean @map("is_booking_request")
  failureCancellationRemarks String? @map("failure_cancellation_remarks")
  cancellationType String? @map("cancellation_type")
  consigneeName String? @map("consignee_name")
  freightRateReceipt String? @map("freight_rate_receipt")
  firstTripId Int? @map("first_trip_id")

  bookingTrips BookingTrip[]
  bookingTripPassengers BookingTripPassenger[]
  bookingTripVehicles BookingTripVehicle[]

  bookingPaymentItems BookingPaymentItem[]

  @@map("booking")
}

model BookingTrip {
  bookingId String @map("booking_id")
  booking Booking @relation(fields: [bookingId], references: [id])
  tripId Int @map("trip_id")
  trip Trip @relation(fields: [tripId], references: [id])

  bookingTripPassengers BookingTripPassenger[]
  bookingTripVehicles BookingTripVehicle[]

  @@map("booking_trip")
  @@id([bookingId, tripId])
}

model BookingTripPassenger {
  bookingId String @map("booking_id")
  booking Booking @relation(fields: [bookingId], references: [id])
  tripId Int @map("trip_id")
  trip Trip @relation(fields: [tripId], references: [id])
  bookingTrip BookingTrip @relation(fields: [bookingId, tripId], references: [bookingId, tripId])
  passengerId Int @map("passenger_id")
  passenger Passenger @relation(fields: [passengerId], references: [id])
  cabinId Int @map("cabin_id")
  cabin Cabin @relation("cabin", fields: [cabinId], references: [id])
  tripCabin TripCabin @relation(fields: [tripId, cabinId], references: [tripId, cabinId])
  seatId Int? @map("seat_id")
  seat Seat? @relation(fields: [seatId], references: [id])
  drivesVehicleId Int? @map("drives_vehicle_id")
  drivesVehicle BookingTripVehicle? @relation(fields: [bookingId, tripId, drivesVehicleId], references: [bookingId, tripId, vehicleId])
  preferredCabinId Int? @map("preferred_cabin_id")
  preferredCabin Cabin? @relation("preferredCabin", fields: [preferredCabinId], references: [id])

  meal String?
  totalPrice Float @map("total_price")
  priceWithoutMarkup Float @map("price_without_markup")
  checkInDate DateTime? @map("check_in_date")
  removedReason String? @map("removed_reason")
  removedReasonType String? @map("removed_reason_type")
  discountType String? @map("discount_type")

  bookingPaymentItems BookingPaymentItem[]

  @@map("booking_trip_passenger")
  @@id([bookingId, tripId, passengerId])
  @@unique([bookingId, tripId, drivesVehicleId])
}

model BookingTripVehicle {
  bookingId String @map("booking_id")
  booking Booking @relation(fields: [bookingId], references: [id])
  tripId Int @map("trip_id")
  trip Trip @relation(fields: [tripId], references: [id])
  bookingTrip BookingTrip @relation(fields: [bookingId, tripId], references: [bookingId, tripId])
  vehicleId Int @map("vehicle_id")
  vehicle Vehicle @relation(fields: [vehicleId], references: [id])
  passengerDriver BookingTripPassenger?

  totalPrice Float @map("total_price")
  priceWithoutMarkup Float @map("price_without_markup")
  checkInDate DateTime? @map("check_in_date")
  removedReason String? @map("removed_reason")
  removedReasonType String? @map("removed_reason_type")

  bookingPaymentItems BookingPaymentItem[]

  @@map("booking_trip_vehicle")
  @@id([bookingId, tripId, vehicleId])
}

model TempBooking {
  id Int @default(autoincrement()) @id
  shippingLineId Int @map("shipping_line_id")
  shippingLine ShippingLine @relation(fields: [shippingLineId], references: [id])
  createdByAccountId String? @map("created_by_account_id")
  createdByAccount Account? @relation("createdByAccount", fields: [createdByAccountId], references: [id])
  approvedByAccountId String? @map("approved_by_account_id")
  approvedByAccount Account? @relation("approvedByAccount", fields: [approvedByAccountId], references: [id])
  voucherCode String? @map("voucher_code")
  voucher Voucher? @relation(fields: [voucherCode], references: [code])

  totalPrice Float @map("total_price")
  priceWithoutMarkup Float @map("price_without_markup")
  bookingType String @map("booking_type")
  paymentReference String? @map("payment_reference")
  contactEmail String? @map("contact_email")
  contactMobile String? @map("contact_mobile")
  createdAt DateTime @map("created_at")
  isBookingRequest Boolean @map("is_booking_request")
  failureCancellationRemarks String? @map("failure_cancellation_remarks")
  consigneeName String? @map("consignee_name")

  bookingTripsJson Json @map("booking_trips_json")
  bookingPaymentItemsJson Json @map("booking_payment_items_json")

  @@map("temp_booking")
}

model Account {
  id String @id
  passengerId Int? @map("passenger_id") @unique
  passenger Passenger? @relation(fields: [passengerId], references: [id])
  shippingLineId Int? @map("shipping_line_id")
  shippingLine ShippingLine? @relation(fields: [shippingLineId], references: [id])
  travelAgencyId Int? @map("travel_agency_id")
  travelAgency TravelAgency? @relation(fields: [travelAgencyId], references: [id])
  clientId Int? @map("client_id")
  client Client? @relation(fields: [clientId], references: [id])

  email String
  role String
  apiKey String? @map("api_key")

  bookingsCreated Booking[] @relation("createdByAccount")
  bookingsApproved Booking[] @relation("approvedByAccount")
  tempBookingsCreated TempBooking[] @relation("createdByAccount")
  tempBookingsApproved TempBooking[] @relation("approvedByAccount")
  vehicles Vehicle[]
  notifications AccountNotification[]
  myVouchers Voucher[]

  @@map("account")
}

model CabinType {
  id Int @default(autoincrement()) @id
  shippingLineId Int @map("shipping_line_id")
  shippingLine ShippingLine @relation(fields: [shippingLineId], references: [id])

  name String
  description String

  cabins Cabin[]

  @@map("cabin_type")
}

model SeatType {
  id Int @default(autoincrement()) @id
  shippingLineId Int @map("shipping_line_id")
  shippingLine ShippingLine @relation(fields: [shippingLineId], references: [id])

  name String
  description String

  seats Seat[]

  @@map("seat_type")
}

model Notification {
  id Int @default(autoincrement()) @id
  tripId Int? @map("trip_id")
  trip Trip? @relation(fields: [tripId], references: [id])

  subject String
  body String
  dateCreated DateTime @map("date_created")

  accountNotifications AccountNotification[]

  @@map("notification")
}

model AccountNotification {
  accountId String @map("account_id")
  account Account @relation(fields: [accountId], references: [id])
  notificationId Int @map("notification_id")
  notification Notification @relation(fields: [notificationId], references: [id])

  isRead Boolean @map("is_read")

  @@map("account_notification")
  @@id([accountId, notificationId])
}

model VehicleType {
  id Int @default(autoincrement()) @id

  name String
  description String

  rateTableRows RateTableRow[]
  vehicles Vehicle[]

  @@map("vehicle_type")
}

model BookingPaymentItem {
  id Int @default(autoincrement()) @id
  bookingId String @map("booking_id")
  booking Booking @relation(fields: [bookingId], references: [id])
  tripId Int? @map("trip_id")
  passengerId Int? @map("passenger_id")
  vehicleId Int? @map("vehicle_id")

  bookingTripPassenger BookingTripPassenger? @relation(fields: [bookingId, tripId, passengerId], references: [bookingId, tripId, passengerId])
  bookingTripVehicle BookingTripVehicle? @relation(fields: [bookingId, tripId, vehicleId], references: [bookingId, tripId, vehicleId])

  price Float
  description String
  type String

  @@map("booking_payment_item")
}

model Voyage {
  id Int @default(autoincrement()) @id
  shipId Int @map("ship_id")
  ship Ship @relation(fields: [shipId], references: [id])
  tripId Int? @map("trip_id") @unique
  trip Trip? @relation(fields: [tripId], references: [id])

  number Int
  date DateTime
  remarks String

  @@map("voyage")
}

model DryDock {
  id Int @default(autoincrement()) @id
  shipId Int @map("ship_id")
  ship Ship @relation(fields: [shipId], references: [id])

  date DateTime

  @@map("dry_dock")
}

model Disbursement {
  id Int @default(autoincrement()) @id
  tripId Int @map("trip_id")
  trip Trip? @relation(fields: [tripId], references: [id])
  date DateTime
  officialReceipt String? @map("official_receipt")
  paidTo String @map("paid_to")
  description String
  purpose String
  amount Float

  @@map("disbursement")
}

model Voucher {
  code String @id
  createdByAccountId String @map("created_by_account_id")
  createdByAccount Account @relation(fields: [createdByAccountId], references: [id])

  description String
  discountFlat Float @map("discount_flat")
  discountPercent Float @map("discount_percent")
  numberOfUses Int? @map("number_of_uses")
  remainingUses Int? @map("remaining_uses")
  expiry DateTime
  canBookOnline Boolean @map("can_book_online")

  minVehicles Int? @map("min_vehicles")

  bookings Booking[]
  tempBookings TempBooking[]

  @@map("voucher")
}

model TravelAgency {
  id Int @default(autoincrement()) @id

  name String

  accounts Account[]
  webhooks Webhook[]
  shippingLines TravelAgencyShippingLine[]
  markups RateTableMarkup[]

  @@map("travel_agency")
}

model TravelAgencyShippingLine {
  travelAgencyId Int @map("travel_agency_id")
  travelAgency TravelAgency @relation(fields: [travelAgencyId], references: [id])
  shippingLineId Int @map("shipping_line_id")
  shippingLine ShippingLine @relation(fields: [shippingLineId], references: [id])

  @@id([travelAgencyId, shippingLineId])
  @@map("travel_agency_shipping_line")
}

model Webhook {
  id Int @default(autoincrement()) @id
  shippingLineId Int? @map("shipping_line_id")
  shippingLine ShippingLine? @relation(fields: [shippingLineId], references: [id])
  travelAgencyId Int? @map("travel_agency_id")
  travelAgency TravelAgency? @relation(fields: [travelAgencyId], references: [id])

  type String
  url String

  @@index([type], type: Hash)
  @@map("webhook")
}

model Client {
  id Int @default(autoincrement()) @id

  name String

  accounts Account[]
  markups RateTableMarkup[]

  @@map("client")
}

model RateTable {
  id Int @default(autoincrement()) @id
  shippingLineId Int @map("shipping_line_id")
  shippingLine ShippingLine @relation(fields: [shippingLineId], references: [id])

  name String

  rows RateTableRow[]
  markups RateTableMarkup[]
  trips Trip[]
  schedules ShippingLineSchedule[]

  @@map("rate_table")
}


model RateTableRow {
  id Int @default(autoincrement()) @id
  rateTableId Int @map("rate_table_id")
  rateTable RateTable @relation(fields: [rateTableId], references: [id])
  cabinId Int? @map("cabin_id")
  cabin Cabin? @relation(fields: [cabinId], references: [id])
  vehicleTypeId Int? @map("vehicle_type_id")
  vehicleType VehicleType? @relation(fields: [vehicleTypeId], references: [id])

  fare Float
  canBookOnline Boolean @map("can_book_online")

  @@map("rate_table_row")
}

model RateTableMarkup {
  id Int @default(autoincrement()) @id
  rateTableId Int @map("rate_table_id")
  rateTable RateTable @relation(fields: [rateTableId], references: [id])
  travelAgencyId Int? @map("travel_agency_id")
  travelAgency TravelAgency? @relation(fields: [travelAgencyId], references: [id])
  clientId Int? @map("client_id")
  client Client? @relation(fields: [clientId], references: [id])

  markupFlat Float @map("markup_flat")
  markupPercent Float @map("markup_percent")
  markupMaxFlat Float @map("markup_max_flat")

  @@map("rate_table_markup")
}