// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Trip {
  id Int @default(autoincrement()) @id
  shipId Int @map("ship_id")
  ship Ship @relation(fields: [shipId], references: [id])
  shippingLineId Int @map("shipping_line_id")
  shippingLine ShippingLine @relation(fields: [shippingLineId], references: [id])
  srcPortId Int @map("src_port_id")
  srcPort Port @relation("srcPort", fields: [srcPortId], references: [id])
  destPortId Int @map("dest_port_id")
  destPort Port @relation("destPort", fields: [destPortId], references: [id])

  departureDate DateTime @map("departure_date")
  referenceNo String @map("reference_number")
  seatSelection Boolean @map("seat_selection") @default(false)
  vehicleCapacity Int @map("vehicle_capacity")

  passengers BookingPassenger[]
  vehicles BookingVehicle[]
  notifications Notification[]
  availableCabins TripCabin[]
  availableVehicleTypes TripVehicleType[]

  @@map("trip")
}

model TripVehicleType {
  tripId Int @map("trip_id")
  trip Trip @relation(fields: [tripId], references: [id])
  vehicleTypeId Int @map("vehicle_type_id")
  vehicleType VehicleType @relation(fields: [vehicleTypeId], references: [id])

  fare Float

  @@map("trip_vehicle_type")
  @@id([tripId, vehicleTypeId])
}

model TripCabin {
  tripId Int @map("trip_id")
  trip Trip @relation(fields: [tripId], references: [id])
  cabinId Int @map("cabin_id")
  cabin Cabin @relation(fields: [cabinId], references: [id])

  passengerCapacity Int @map("passenger_capacity")
  adultFare Float @map("adult_fare")

  @@map("trip_cabin")
  @@id([tripId, cabinId])
}

model Ship {
  id Int @default(autoincrement()) @id
  shippingLineId Int @map("shipping_line_id")
  shippingLine ShippingLine @relation(fields: [shippingLineId], references: [id])

  name String
  recommendedVehicleCapacity Int @map("recommended_vehicle_capacity")

  cabins Cabin[]
  trips Trip[]
  schedules ShippingLineSchedule[]

  @@map("ship")
}

model Cabin {
  id Int @default(autoincrement()) @id
  shipId Int @map("ship_id")
  ship Ship @relation(fields: [shipId], references: [id])
  cabinTypeId Int @map("cabin_type_id")
  cabinType CabinType @relation(fields: [cabinTypeId], references: [id])

  name String
  numOfRows Int @map("number_of_rows")
  numOfColumns Int @map("number_of_columns")
  recommendedPassengerCapacity Int @map("recommended_passenger_capacity")

  seats Seat[]
  tripSpecificInfo TripCabin[]
  schedules ShippingLineScheduleRate[]

  @@map("cabin")
}

model Seat {
  id Int @default(autoincrement()) @id
  cabinId Int @map("cabin_id")
  cabin Cabin @relation(fields: [cabinId], references: [id])
  seatTypeId Int @map("seat_type_id")
  seatType SeatType @relation(fields: [seatTypeId], references: [id])

  name String
  row Int
  column Int

  bookingPassengers BookingPassenger[]

  @@map("seat")
}

model ShippingLine {
  id Int @default(autoincrement()) @id

  name String

  trips Trip[]
  ships Ship[]
  schedules ShippingLineSchedule[]
  cabinTypes CabinType[]
  seatTypes SeatType[]

  @@map("shipping_line")
}

model ShippingLineSchedule {
  id Int @default(autoincrement()) @id
  shippingLineId Int @map("shipping_line_id")
  shippingLine ShippingLine @relation(fields: [shippingLineId], references: [id])
  srcPortId Int @map("src_port_id")
  srcPort Port @relation("srcPort", fields: [srcPortId], references: [id])
  destPortId Int @map("dest_port_id")
  destPort Port @relation("destPort", fields: [destPortId], references: [id])
  shipId Int @map("ship_id")
  ship Ship @relation(fields: [shipId], references: [id])

  name String
  departureHour Int @map("departure_hour")
  departureMinute Int @map("departure_minute")

  rates ShippingLineScheduleRate[]

  @@map("shipping_line_schedule")
}

model ShippingLineScheduleRate {
  id Int @default(autoincrement()) @id
  scheduleId Int @map("schedule_id")
  schedule ShippingLineSchedule @relation(fields: [scheduleId], references: [id])
  cabinId Int? @map("cabin_id")
  cabin Cabin? @relation(fields: [cabinId], references: [id])
  vehicleTypeId Int? @map("vehicle_type_id")
  vehicleType VehicleType? @relation(fields: [vehicleTypeId], references: [id])

  fare Float

  @@map("shipping_line_schedule_rate")
}


model Port {
  id Int @default(autoincrement()) @id

  name String

  tripsSrc Trip[] @relation("srcPort")
  tripsDest Trip[] @relation("destPort")
  schedulesSrc ShippingLineSchedule[] @relation("srcPort")
  schedulesDest ShippingLineSchedule[] @relation("destPort")

  @@map("port")
}

model Booking {
  id Int @default(autoincrement()) @id

  totalPrice Float @map("total_price")
  paymentReference String? @map("payment_reference")

  passengers BookingPassenger[]
  vehicles BookingVehicle[]

  @@map("booking")
}

model BookingPassenger {
  id Int @default(autoincrement()) @id
  bookingId Int @map("booking_id")
  booking Booking @relation(fields: [bookingId], references: [id])
  tripId Int @map("trip_id")
  trip Trip @relation(fields: [tripId], references: [id])
  passengerId Int @map("passenger_id")
  passenger Passenger @relation(fields: [passengerId], references: [id])
  seatId Int? @map("seat_id")
  seat Seat? @relation(fields: [seatId], references: [id])

  meal String
  totalPrice Float @map("total_price")
  referenceNo String @map("reference_no")
  checkInDate DateTime? @map("check_in_date")

  @@map("booking_passenger")
}

model Passenger {
  id Int @default(autoincrement()) @id
  buddyId Int? @map("buddy_id")
  buddy Passenger? @relation("PassengerBuddies", fields: [buddyId], references: [id])
  accountId String? @map("account_id")
  account Account?

  firstName String @map("first_name")
  lastName String @map("last_name")
  occupation String
  sex String
  civilStatus String @map("civil_status")
  birthday DateTime
  address String
  nationality String
  discountType String @map("discount_type")

  buddies Passenger[] @relation("PassengerBuddies")
  bookings BookingPassenger[]
  vehicles PassengerVehicle[]

  @@map("passenger")
}

model BookingVehicle {
  id Int @default(autoincrement()) @id
  bookingId Int @map("booking_id")
  booking Booking @relation(fields: [bookingId], references: [id])
  tripId Int @map("trip_id")
  trip Trip @relation(fields: [tripId], references: [id])
  vehicleId Int @map("vehicle_id")
  vehicle PassengerVehicle @relation(fields: [vehicleId], references: [id])

  totalPrice Float @map("total_price")

  @@map("booking_vehicle")
}

model PassengerVehicle {
  id Int @default(autoincrement()) @id
  passengerId Int @map("passenger_id")
  passenger Passenger @relation(fields: [passengerId], references: [id])

  plateNo String @map("plate_number")
  modelName String @map("model_name")
  modelYear Int @map("model_year")
  modelBody String @map("model_body")
  officialReceiptUrl String @map("official_receipt_url")
  certificateOfRegistrationUrl String @map("certificate_of_registration_url")

  bookings BookingVehicle[]

  @@map("passenger_vehicle")
}

model TempBooking {
  id Int @default(autoincrement()) @id

  totalPrice Float @map("total_price")
  paymentReference String? @map("payment_reference")
  passengersJson Json @map("passengers_json")
  vehiclesJson Json @map("vehicles_json")

  @@map("temp_booking")
}

model Account {
  id String @id
  passengerId Int? @map("passenger_id") @unique
  passenger Passenger? @relation(fields: [passengerId], references: [id])

  email String
  role String

  notifications AccountNotification[]

  @@map("account")
}

model CabinType {
  id Int @default(autoincrement()) @id
  shippingLineId Int @map("shipping_line_id")
  shippingLine ShippingLine @relation(fields: [shippingLineId], references: [id])

  name String
  description String

  cabins Cabin[]

  @@map("cabin_type")
}

model SeatType {
  id Int @default(autoincrement()) @id
  shippingLineId Int @map("shipping_line_id")
  shippingLine ShippingLine @relation(fields: [shippingLineId], references: [id])

  name String
  description String

  seats Seat[]

  @@map("seat_type")
}

model Notification {
  id Int @default(autoincrement()) @id
  tripId Int? @map("trip_id")
  trip Trip? @relation(fields: [tripId], references: [id])

  subject String
  body String
  dateCreated DateTime @map("date_created")

  accountNotifications AccountNotification[]

  @@map("notification")
}

model AccountNotification {
  accountId String @map("account_id")
  account Account @relation(fields: [accountId], references: [id])
  notificationId Int @map("notification_id")
  notification Notification @relation(fields: [notificationId], references: [id])

  isRead Boolean @map("is_read")

  @@map("account_notification")
  @@id([accountId, notificationId])
}

model VehicleType {
  id Int @default(autoincrement()) @id

  name String
  description String

  trips TripVehicleType[]
  schedules ShippingLineScheduleRate[]

  @@map("vehicle_type")
}