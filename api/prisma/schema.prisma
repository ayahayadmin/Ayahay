// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Trip {
  id Int @default(autoincrement()) @id
  shipId Int @map("ship_id")
  ship Ship @relation(fields: [shipId], references: [id])
  shippingLineId Int @map("shipping_line_id")
  shippingLine ShippingLine @relation(fields: [shippingLineId], references: [id])
  srcPortId Int @map("src_port_id")
  srcPort Port @relation("srcPort", fields: [srcPortId], references: [id])
  destPortId Int @map("dest_port_id")
  destPort Port @relation("destPort", fields: [destPortId], references: [id])
  departureDate DateTime @map("departure_date")
  baseFare Float @map("base_fare")
  referenceNo String @map("reference_number")
  passengers BookingPassenger[]
  vehicles BookingVehicle[]
  availableSeatTypes String[] @map("available_seat_types")
  availableCabins String[] @map("available_cabins")
  meals String[]
  
  @@map("trip")
}

model Ship {
  id Int @default(autoincrement()) @id
  name String
  vehicleCapacity Int @map("vehicle_capacity")
  cabins Cabin[]
  trips Trip[]

  @@map("ship")
}

model Cabin {
  id Int @default(autoincrement()) @id
  shipId Int @map("ship_id")
  ship Ship @relation(fields: [shipId], references: [id])
  type String
  name String
  numOfRows Int @map("number_of_rows")
  numOfColumns Int @map("number_of_columns")
  seats Seat[]

  @@map("cabin")
}

model Seat {
  id Int @default(autoincrement()) @id
  cabinId Int @map("cabin_id")
  cabin Cabin @relation(fields: [cabinId], references: [id])
  name String
  row Int
  column Int
  type String
  bookingPassengers BookingPassenger[]

  @@map("seat")
}

model ShippingLine {
  id Int @default(autoincrement()) @id
  name String
  trips Trip[]

  @@map("shipping_line")
}

model Port {
  id Int @default(autoincrement()) @id
  tripsSrc Trip[] @relation("srcPort")
  tripsDest Trip[] @relation("destPort")
  name String

  @@map("port")
}

model Booking {
  id Int @default(autoincrement()) @id
  totalPrice Float @map("total_price")
  paymentReference String @map("payment_reference")
  referenceNo String @map("reference_number")
  passengers BookingPassenger[]
  vehicles BookingVehicle[]

  @@map("booking")
}

model BookingPassenger {
  id Int @default(autoincrement()) @id
  bookingId Int @map("booking_id")
  booking Booking @relation(fields: [bookingId], references: [id])
  tripId Int @map("trip_id")
  trip Trip @relation(fields: [tripId], references: [id])
  passengerId Int @map("passenger_id")
  passenger Passenger @relation(fields: [passengerId], references: [id])
  seatId Int @map("seat_id")
  seat Seat @relation(fields: [seatId], references: [id])
  meal String
  totalPrice Float @map("total_price")
  referenceNo String @map("reference_no")
  checkInDate DateTime? @map("check_in_date")

  @@map("booking_passenger")
}

model Passenger {
  id Int @default(autoincrement()) @id
  firstName String @map("first_name")
  lastName String @map("last_name")
  occupation String
  sex String
  civilStatus String @map("civil_status")
  birthday DateTime
  address String
  nationality String
  buddyId Int? @map("buddy_id")
  buddy Passenger? @relation("PassengerBuddies", fields: [buddyId], references: [id])
  buddies Passenger[] @relation("PassengerBuddies")
  bookings BookingPassenger[]
  vehicles PassengerVehicle[]

  @@map("passenger")
}

model BookingVehicle {
  id Int @default(autoincrement()) @id
  bookingId Int @map("booking_id")
  booking Booking @relation(fields: [bookingId], references: [id])
  tripId Int @map("trip_id")
  trip Trip @relation(fields: [tripId], references: [id])
  vehicleId Int @map("vehicle_id")
  vehicle PassengerVehicle @relation(fields: [vehicleId], references: [id])
  totalPrice Float @map("total_price")

  @@map("booking_vehicle")
}

model PassengerVehicle {
  id Int @default(autoincrement()) @id
  passengerId Int @map("passenger_id")
  passenger Passenger @relation(fields: [passengerId], references: [id])
  plateNo String @map("plate_number")
  modelName String @map("model_name")
  modelYear Int @map("model_year")
  modelBody String @map("model_body")
  officialReceiptUrl String @map("official_receipt_url")
  certificateOfRegistrationUrl String @map("certificate_of_registration_url")
  bookings BookingVehicle[]

  @@map("passenger_vehicle")
}

// add booking trip passenger